{
	"info": {
		"_postman_id": "task-manager-api-collection",
		"name": "Task Manager API",
		"description": "Complete API collection for Task Manager with JWT authentication, CRUD operations, pagination, filters, and search",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"token\", jsonData.token);",
									"    pm.collectionVariables.set(\"userId\", jsonData.user.id);",
									"    console.log(\"Token saved:\", jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"test123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						},
						"description": "Register a new user account. Returns user object and JWT token."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"token\", jsonData.token);",
									"    pm.collectionVariables.set(\"userId\", jsonData.user.id);",
									"    console.log(\"Token saved:\", jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"test123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Login existing user with email and password. Returns JWT token."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration and login"
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"taskId\", jsonData._id);",
									"    console.log(\"Task ID saved:\", jsonData._id);",
									"    console.log(\"Efficiency calculated:\", jsonData.efficiency);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Complete project documentation\",\n  \"status\": \"Pending\",\n  \"isCompleted\": false,\n  \"estimatedHours\": 5,\n  \"actualHours\": 4\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						},
						"description": "Create a new task. Efficiency is automatically calculated."
					},
					"response": []
				},
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks?page=1&limit=5",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "limit",
									"value": "5",
									"description": "Items per page (default: 5)"
								},
								{
									"key": "status",
									"value": "Pending",
									"description": "Filter by status",
									"disabled": true
								},
								{
									"key": "search",
									"value": "project",
									"description": "Search in task title",
									"disabled": true
								}
							]
						},
						"description": "Get all tasks with pagination, filtering, and search capabilities"
					},
					"response": []
				},
				{
					"name": "Get Tasks - Page 2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks?page=2&limit=5",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Get tasks from page 2"
					},
					"response": []
				},
				{
					"name": "Get Tasks - Filter by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks?status=Pending",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"],
							"query": [
								{
									"key": "status",
									"value": "Pending"
								}
							]
						},
						"description": "Get all tasks with 'Pending' status"
					},
					"response": []
				},
				{
					"name": "Get Tasks - Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks?search=documentation",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"],
							"query": [
								{
									"key": "search",
									"value": "documentation"
								}
							]
						},
						"description": "Search tasks by title (case-insensitive)"
					},
					"response": []
				},
				{
					"name": "Get Tasks - Combined Filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks?page=1&limit=10&status=In Progress&search=project",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "status",
									"value": "In Progress"
								},
								{
									"key": "search",
									"value": "project"
								}
							]
						},
						"description": "Combine pagination, status filter, and search"
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Complete project documentation - UPDATED\",\n  \"status\": \"In Progress\",\n  \"actualHours\": 6\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/{{taskId}}",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks", "{{taskId}}"]
						},
						"description": "Update an existing task. Replace {{taskId}} with actual task ID."
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{taskId}}",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks", "{{taskId}}"]
						},
						"description": "Delete a task. Replace {{taskId}} with actual task ID."
					},
					"response": []
				}
			],
			"description": "CRUD operations for tasks with authentication",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "Test Data Creation",
			"item": [
				{
					"name": "Create Task 1 - High Priority",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Task 1 - High Priority\",\n  \"status\": \"Pending\",\n  \"isCompleted\": false,\n  \"estimatedHours\": 5,\n  \"actualHours\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Create Task 2 - Medium Priority",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Task 2 - Medium Priority\",\n  \"status\": \"In Progress\",\n  \"isCompleted\": false,\n  \"estimatedHours\": 4,\n  \"actualHours\": 4\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Create Task 3 - Documentation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Task 3 - Documentation\",\n  \"status\": \"Done\",\n  \"isCompleted\": true,\n  \"estimatedHours\": 2,\n  \"actualHours\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Create Task 4 - Bug Fix",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Task 4 - Bug Fix\",\n  \"status\": \"Pending\",\n  \"isCompleted\": false,\n  \"estimatedHours\": 1,\n  \"actualHours\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Create Task 5 - Feature Development",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Task 5 - Feature Development\",\n  \"status\": \"In Progress\",\n  \"isCompleted\": false,\n  \"estimatedHours\": 8,\n  \"actualHours\": 6\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Create Task 6 - Testing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Task 6 - Testing\",\n  \"status\": \"Done\",\n  \"isCompleted\": true,\n  \"estimatedHours\": 3,\n  \"actualHours\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "tasks"]
						}
					},
					"response": []
				}
			],
			"description": "Pre-configured requests to create test data",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "taskId",
			"value": "",
			"type": "string"
		}
	]
}

